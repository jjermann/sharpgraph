<ResourceDictionary x:Class="SharpGraph.GraphTemplatesDictionary"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sharpGraph="clr-namespace:SharpGraph"
                    xmlns:viewmodels="clr-namespace:SharpGraph;assembly=GraphViewModel">
    <sharpGraph:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <sharpGraph:ListToDoubleCollectionConverter x:Key="ListToDoubleCollectionConverter" />
    <sharpGraph:CenterConverter x:Key="CenterConverter" />
    <sharpGraph:ShapeDataToShapeConverter x:Key="ShapeDataToShapeConverter" />

    <Style x:Key="NodeShapeStyle" TargetType="{x:Type Shape}">
        <Setter Property="Width" Value="{Binding Path=(viewmodels:WpfNode.Width)}" />
        <Setter Property="Height" Value="{Binding Path=(viewmodels:WpfNode.Height)}" />
        <Setter Property="Fill" Value="{Binding Path=(viewmodels:WpfNode.FillColor)}" />
        <Setter Property="Stroke" Value="{Binding Path=(viewmodels:WpfNode.StrokeColor)}" />
        <Setter Property="StrokeThickness" Value="{Binding Path=(viewmodels:WpfNode.StrokeThickness)}" />
        <Setter Property="StrokeDashArray"
                Value="{Binding Path=(viewmodels:WpfNode.StrokeDashList), Converter={StaticResource ListToDoubleCollectionConverter}}" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="50" ShadowDepth="0" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(viewmodels:WpfNode.IsSelected)}" Value="True">
                <Setter Property="Fill" Value="SlateGray" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="NodeControlTemplate" TargetType="{x:Type ContentControl}">
        <Grid HorizontalAlignment="Left"
              VerticalAlignment="Top">
            <ContentControl x:Name="NodeShape"
                            Content="{Binding
                                Path=(viewmodels:WpfNode.NodeShapeData),
                                Converter={StaticResource ShapeDataToShapeConverter},
                                ConverterParameter={StaticResource NodeShapeStyle}}" />
            <TextBlock Text="{Binding Path=(viewmodels:WpfNode.Label)}"
                       FontSize="{Binding Path=(viewmodels:WpfNode.FontSize)}"
                       Foreground="{Binding Path=(viewmodels:WpfNode.FontColor)}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="NodeStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Template" Value="{StaticResource NodeControlTemplate}" />
        <Setter Property="Margin" Value="{Binding Path=(viewmodels:WpfNode.Margin)}" />
    </Style>
    <DataTemplate DataType="{x:Type viewmodels:WpfNode}">
        <Button Style="{StaticResource NodeStyle}"
                Command="{Binding Path=(viewmodels:WpfNode.ToggleNodeSelectionCommand)}" />
    </DataTemplate>

    <Style x:Key="EdgeStyle" TargetType="{x:Type Shape}">
        <Setter Property="Stroke" Value="{Binding Path=(viewmodels:WpfEdge.StrokeColor)}" />
        <Setter Property="StrokeThickness" Value="{Binding Path=(viewmodels:WpfEdge.StrokeThickness)}" />
        <Setter Property="StrokeDashArray"
                Value="{Binding Path=(viewmodels:WpfEdge.StrokeDashList), Converter={StaticResource ListToDoubleCollectionConverter}}" />
    </Style>
    <Style x:Key="ArrowHeadStyle" TargetType="{x:Type Shape}">
        <Setter Property="Stroke" Value="{Binding Path=(viewmodels:WpfEdge.StrokeColor)}" />
        <Setter Property="StrokeThickness" Value="{Binding Path=(viewmodels:WpfEdge.StrokeThickness)}" />
        <Setter Property="Fill" Value="{Binding Path=(viewmodels:WpfEdge.StrokeColor)}" />
        <Setter Property="Visibility"
                Value="{Binding Path=(viewmodels:WpfEdge.HasArrowHead), Converter={StaticResource BoolToVisibilityConverter}}" />
    </Style>
    <Style x:Key="ArrowTailStyle" TargetType="{x:Type Shape}">
        <Setter Property="Stroke" Value="{Binding Path=(viewmodels:WpfEdge.StrokeColor)}" />
        <Setter Property="StrokeThickness" Value="{Binding Path=(viewmodels:WpfEdge.StrokeThickness)}" />
        <Setter Property="Fill" Value="{Binding Path=(viewmodels:WpfEdge.StrokeColor)}" />
        <Setter Property="Visibility"
                Value="{Binding Path=(viewmodels:WpfEdge.HasArrowTail), Converter={StaticResource BoolToVisibilityConverter}}" />
    </Style>
    <DataTemplate DataType="{x:Type viewmodels:WpfEdge}">
        <Grid HorizontalAlignment="Left"
              VerticalAlignment="Top">
            <Path Data="{Binding Path=Geometry}"
                  Style="{StaticResource EdgeStyle}" />
            <Path Data="{Binding Path=ArrowHeadGeometry}"
                  Style="{StaticResource ArrowHeadStyle}" />
            <Path Data="{Binding Path=ArrowTailGeometry}"
                  Style="{StaticResource ArrowTailStyle}" />
            <TextBlock Text="{Binding Path=Label}"
                       Margin="{Binding Path=LabelMargin}"
                       sharpGraph:Mover.MoveToMiddle="True"
                       FontSize="{Binding Path=FontSize}"
                       Foreground="{Binding Path=FontColor}"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Top" />
        </Grid>
    </DataTemplate>

    <Style x:Key="SubGraphShapeStyle" TargetType="{x:Type Shape}">
        <Setter Property="Width" Value="{Binding Path=(viewmodels:WpfSubGraph.Width)}" />
        <Setter Property="Height" Value="{Binding Path=(viewmodels:WpfSubGraph.Height)}" />
        <Setter Property="Fill" Value="{Binding Path=(viewmodels:WpfSubGraph.FillColor)}" />
        <Setter Property="Stroke" Value="{Binding Path=(viewmodels:WpfSubGraph.StrokeColor)}" />
        <Setter Property="StrokeThickness" Value="{Binding Path=(viewmodels:WpfSubGraph.StrokeThickness)}" />
        <Setter Property="StrokeDashArray"
                Value="{Binding Path=(viewmodels:WpfSubGraph.StrokeDashList), Converter={StaticResource ListToDoubleCollectionConverter}}" />
    </Style>
    <Style x:Key="SubGraphShapeControl" TargetType="ContentControl">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(viewmodels:WpfSubGraph.HasBoundingBox)}" Value="True">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate DataType="{x:Type viewmodels:WpfSubGraph}">
                            <Grid HorizontalAlignment="Left"
                                  VerticalAlignment="Top">
                                <Rectangle Margin="{Binding Path=Margin}"
                                           Style="{StaticResource SubGraphShapeStyle}" />
                                <TextBlock Text="{Binding Path=Label}"
                                           Margin="{Binding Path=LabelMargin}"
                                           sharpGraph:Mover.MoveToMiddle="True"
                                           FontSize="{Binding Path=FontSize}"
                                           Foreground="{Binding Path=FontColor}"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Top" />
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <DataTemplate DataType="{x:Type viewmodels:WpfSubGraph}">
        <ContentControl Content="{Binding}" Style="{StaticResource SubGraphShapeControl}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodels:WpfGraph}">
        <Border BorderThickness="{Binding Path=Pad}"
                BorderBrush="{Binding Path=FillColor}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
            <Grid Background="{Binding Path=FillColor}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center">
                <ItemsControl ItemsSource="{Binding Path=WpfSubGraphs}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid HorizontalAlignment="Left" VerticalAlignment="Top" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <ItemsControl ItemsSource="{Binding Path=WpfNodes}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid HorizontalAlignment="Left" VerticalAlignment="Top" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <ItemsControl ItemsSource="{Binding Path=WpfEdges}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid HorizontalAlignment="Left" VerticalAlignment="Top" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <TextBlock Text="{Binding Path=Label}"
                           Margin="{Binding Path=LabelMargin}"
                           sharpGraph:Mover.MoveToMiddle="True"
                           FontSize="{Binding Path=FontSize}"
                           Foreground="{Binding Path=FontColor}"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top" />
            </Grid>
        </Border>
    </DataTemplate>
</ResourceDictionary>