Bugs:
- MAJOR BUG:
  Handle the different coordinate systems (top to bottom vs. bottom to top)
  o Individual changes for all involved properties?
    In particular path geometries need to be handled!
  o The important part is to keep the View (e.g. ActualHeight) separated from the Viewmodel!
  o Maybe LayoutTransform? But what about Labels? We don't want to transform those...
- Fix the different results from dot output (i.e. implement/imitate the sometimes strange dot behavior)
- Fix the content of various objects (ids):
  o Fix Encodings
  o Apply special characters like \n
  o Trim surrounding parenthesis
  o => A proper solution would be to introduce a new class for this that handles all of it
- Proper edge support:
  Currently we use cubic bezier segments but dot seems to use (global) cubic splines.
  We could maybe use http://numerics.mathdotnet.com/ for this...
  This is kind of important because incorrect paths might interfere with node positions.

Possible design Improvements / refactorings:
- Cleanup the initial WPF implementation
  o Make sure that property changes are propagated correctly, use INotifyPropertyChanged
    Make much more observable, in particular also on the model
  o maybe dependency properties?
- Take default settings from the parent graph into consideration (add model methods accordingly)
- Find a nice design how to handle ids (See above), maybe support HTML dot files and/or structs
- More unit tests
- Think about exception handling, add much more checks, make more restriction assumptions
- Support (continious) changes in the original graph, maybe do redesigns accordingly
  and/or allow alternative ways to setup graphs.
- MAYBE: Make sure the ToDot result is exactly the same as before
  o Maybe we don't want this...
  o This involves remembering the exact order and probably also subgraphs at ends of edges
- MAYBE: Make sure that the layout uses the same ids as the original dot
  (currently not the case for non-strict edges for sure)
- MAYBE: Aim to get the equivalent layout output as from the original dot file

Content improvements:
- Arrow heads
- Support many more basic attributes (a never ending task)
- Make everything much more interactive:
  o Open, Save, SaveAs, View checkboxes for all windows
  o Click events on nodes
    In particular change VisibleNodes properly (also see above regarding INotifyPropertyChanged).
	Maybe: Allow more changes to the graph.
  o Zoom support
- Make a second GraphView application for "Naturmagie" (which was one of my reason to start this project)
- Make a third GraphView application to interactively visualize complex dependencies,
  maybe with a hook to some other application (sql/vs/?)
  